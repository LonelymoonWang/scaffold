# 应用名称
spring.application.name=scaffold
# 数据库驱动：
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据源名称
spring.datasource.name=defaultDataSource
# 数据库连接地址allowPublicKeyRetrieval=true&
spring.datasource.url=jdbc:mysql://114.116.253.115:3306/scaffold?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC
# 数据库用户名&密码：
spring.datasource.username=lonelymoon
spring.datasource.password=)tMhp9LBoP^yXjEu
#下面这些内容是为了让MyBatis映射
#指定Mybatis的Mapper文件
mybatis.mapper-locations=classpath:mappers/*xml
#指定Mybatis的实体目录
mybatis.type-aliases-package=wang.lonelymoon.scaffold.entity
spring.jpa.database=MySQL
#控制台打印SQL
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
#ddl-auto：create ----每次运行该程序，没有表格会新建表格，表内有数据会清空；
#ddl-auto：create-drop ----每次程序结束的时候会清空表
#ddl-auto：update ---- 每次运行程序，没有表格会新建表格，表内有数据不会清空，只会更新
#ddl-auto： validate ---- 运行程序会校验数据与数据库的字段类型是否相同，不同会报错。
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.mvc.converters.preferred-json-mapper=gson
## Format to use when serializing Date objects.序列化日期对象时使用的格式
#spring.gson.date-format=
#
## Whether to disable the escaping of HTML characters such as '<', '>', etc.是否禁用HTML的转义字符（比如'<'，'>'等）
#spring.gson.disable-html-escaping=
#
## Whether to exclude inner classes during serialization.序列化时是否排除内部类
#spring.gson.disable-inner-class-serialization=
#
## Whether to enable serialization of complex map keys (i.e. non-primitives).序列化时是否启用复杂映射键
#spring.gson.enable-complex-map-key-serialization= # Whether to enable serialization of complex map keys (i.e. non-primitives).
#序列化或反序列化时是否排除所有没有“@Expose”注解的字段。
## Whether to exclude all fields from consideration for serialization or deserialization that do not have the "Expose" annotation.
#spring.gson.exclude-fields-without-expose-annotation=
#序列化时应用于对象字段的命名策略
## Naming policy that should apply to an object's field during serialization and deserialization.
#spring.gson.field-naming-policy=
#是否在输出之前添加一些特殊文本来生成不可执行的JSON
## Whether to generate non executable JSON by prefixing the output with some special text.
#spring.gson.generate-non-executable-json=
#是否放宽解析不符合RFC 4627的JSON
## Whether to be lenient about parsing JSON that doesn't conform to RFC 4627.
#spring.gson.lenient=
#Long类型的序列化策略
## Serialization policy for Long and long types.
#spring.gson.long-serialization-policy=
#序列化时是否输出经过美化后格式的JSON
## Whether to output serialized JSON that fits in a page for pretty printing.
#spring.gson.pretty-printing=
#是否序列化空字段（null）
## Whether to serialize null fields.
#spring.gson.serialize-nulls=

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=114.116.253.115
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=1lqVacmLi_Dug6&WV
spring.redis.lettuce.pool.max-idle=20
spring.redis.lettuce.pool.min-idle=0
spring.redis.lettuce.pool.max-active=100
spring.redis.lettuce.pool.max-wait=1000
# 关闭超时时间 必须大于redis.conf中的tcp-keepalive 300
spring.redis.lettuce.shutdown-timeout=500
# 连接超时时间（毫秒）
spring.redis.timeout=5000


# 邮件配置
spring.mail.username=867007845@qq.com
spring.mail.password=xaajonywphbfbccc
#注解地址
spring.mail.host=smtp.qq.com
spring.mail.port=465
# 配置邮件编码
spring.mail.default-encoding=UTF-8
#开启ssl
spring.mail.properties.mail.smtp.ssl.enable=true
# 配饰 SSL 加密工厂
spring.mail.properties.mail.smtp.socketFactoryClass=javax.net.ssl.SSLSocketFactory
# 表示开启 DEBUG 模式
spring.mail.properties.mail.debug=true


# max file size
spring.servlet.multipart.max-file-size=10MB
# max request size
spring.servlet.multipart.max-request-size=10MB
# files storage location (stores all files uploaded via REST API)
storage.location=./uploads

#spring.resources.static-locations = classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/exceltohtml/


# 应用服务 WEB 访问端口
server.port=8080


